---
- name: Upgrade to a specific kernel version and ensure it's used
  hosts: all
  become: yes
  gather_facts: no

  vars:
    target_kernel_version: "5.15.0-117-generic"  # Replace with your target kernel version

  tasks:
    - name: Ensure the target kernel version is installed
      ansible.builtin.apt:
        name: 
          - "linux-image-{{ target_kernel_version }}"
          - "linux-headers-{{ target_kernel_version }}"
          - "linux-modules-{{ target_kernel_version }}"
        state: present
      register: install_kernel_result

    - name: Debug message for kernel installation
      ansible.builtin.debug:
        msg: "Kernel {{ target_kernel_version }} installed successfully."
      when: install_kernel_result is succeeded

    - name: List all installed kernel versions
      ansible.builtin.command: dpkg --list | grep linux-image
      register: installed_kernels

    - name: Display installed kernels
      ansible.builtin.debug:
        var: installed_kernels.stdout_lines

    - name: Set GRUB to boot into {{ target_kernel_version }} by default
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: '^GRUB_DEFAULT=.*'
        replace: 'GRUB_DEFAULT="Advanced options for Ubuntu>Ubuntu, with Linux {{ target_kernel_version }}"'

    - name: Update GRUB configuration
      ansible.builtin.command:
        cmd: update-grub
      register: grub_update_result
      ignore_errors: yes

    - name: Ensure GRUB update ran
      ansible.builtin.debug:
        msg: "GRUB update command executed."
      when: grub_update_result is defined and grub_update_result.failed is not defined

    - name: Reboot the server to apply the new kernel
      ansible.builtin.reboot:
        reboot_timeout: 600

    - name: Verify the running kernel after reboot
      ansible.builtin.command: uname -r
      register: running_kernel
      ignore_errors: yes

    - name: Display the running kernel
      ansible.builtin.debug:
        msg: "The system is now running kernel version {{ running_kernel.stdout }}."
      when: running_kernel is defined and 'stdout' in running_kernel and target_kernel_version in running_kernel.stdout

    - name: Fail if kernel version does not match
      ansible.builtin.fail:
        msg: "Kernel version does not match the target version {{ target_kernel_version }}. Current version: {{ running_kernel.stdout }}"
      when: running_kernel is defined and 'stdout' in running_kernel and target_kernel_version not in running_kernel.stdout
