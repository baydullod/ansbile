---
- name: Apply the latest kernel updates
  hosts: all
  become: yes
  gather_facts: no

  tasks:
    - name: Update the package list
      ansible.builtin.apt:
        update_cache: yes

    - name: Upgrade all packages, including the latest kernel
      ansible.builtin.apt:
        name: '*'
        state: latest

    - name: Ensure the latest kernel is installed
      ansible.builtin.shell: |
        dpkg -l | grep linux-image | grep ii | sort -V | tail -n 1 | awk '{print $2}'
      register: latest_kernel
      changed_when: false

    - name: Debug latest kernel version
      ansible.builtin.debug:
        var: latest_kernel.stdout

    - name: Fail if latest kernel not found
      ansible.builtin.fail:
        msg: "Latest kernel version could not be determined."
      when: latest_kernel.stdout is not defined or latest_kernel.stdout == ""

    - name: Set GRUB to boot into the latest kernel by default
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: '^GRUB_DEFAULT=.*'
        replace: 'GRUB_DEFAULT="Advanced options for Ubuntu>Ubuntu, with Linux {{ latest_kernel.stdout }}"'
      when: latest_kernel.stdout is defined and latest_kernel.stdout != ""

    - name: Update GRUB configuration
      ansible.builtin.command:
        cmd: update-grub
      register: grub_update_result
      ignore_errors: yes

    - name: Ensure GRUB update ran
      ansible.builtin.debug:
        msg: "GRUB update command executed."
      when: grub_update_result is defined and grub_update_result.failed is not defined

    - name: Reboot the server to apply the new kernel
      ansible.builtin.reboot:
        reboot_timeout: 600

    - name: Verify the running kernel after reboot
      ansible.builtin.command: uname -r
      register: running_kernel
      ignore_errors: yes

    - name: Display the running kernel
      ansible.builtin.debug:
        msg: "The system is now running kernel version {{ running_kernel.stdout }}."
      when: running_kernel is defined and 'stdout' in running_kernel and latest_kernel.stdout in running_kernel.stdout

    - name: Fail if kernel version does not match
      ansible.builtin.fail:
        msg: "Kernel version does not match the latest version {{ latest_kernel.stdout }}. Current version: {{ running_kernel.stdout }}"
      when: running_kernel is defined and 'stdout' in running_kernel and latest_kernel.stdout not in running_kernel.stdout
