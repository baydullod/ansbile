---
- name: Install Apache HTTPD from Source on Ubuntu (Idempotent)
  hosts: all
  become: true
  vars:
    apache_version: "2.4.58"
    apache_prefix: "/usr/local/apache2"
    apache_download_url: "https://downloads.apache.org/httpd/httpd-{{ apache_version }}.tar.gz"
    src_dir: "/usr/local/src/httpd-{{ apache_version }}"
    
  tasks:
    - name: Install Required Dependencies
      apt:
        name:
          - build-essential
          - libpcre3
          - libpcre3-dev
          - libssl-dev
          - zlib1g-dev
          - wget
          - tar
        state: present
        update_cache: yes

    - name: Check if Apache is Already Installed
      stat:
        path: "{{ apache_prefix }}/bin/httpd"
      register: apache_installed

    - name: Download Apache HTTPD Source
      get_url:
        url: "{{ apache_download_url }}"
        dest: "/usr/local/src/httpd-{{ apache_version }}.tar.gz"
      when: not apache_installed.stat.exists

    - name: Extract Apache HTTPD Source
      ansible.builtin.unarchive:
        src: "/usr/local/src/httpd-{{ apache_version }}.tar.gz"
        dest: "/usr/local/src/"
        remote_src: yes
      when: not apache_installed.stat.exists

    - name: Configure Apache Source Code
      command:
        cmd: "./configure --prefix={{ apache_prefix }} --enable-ssl --enable-so --enable-mods-shared=all --with-mpm=event"
        chdir: "{{ src_dir }}"
        creates: "{{ src_dir }}/Makefile"
      when: not apache_installed.stat.exists

    - name: Compile Apache HTTPD
      command:
        cmd: "make -j{{ ansible_processor_vcpus }}"
        chdir: "{{ src_dir }}"
      async: 300
      poll: 10
      when: not apache_installed.stat.exists

    - name: Install Apache HTTPD
      command:
        cmd: "make install"
        chdir: "{{ src_dir }}"
      when: not apache_installed.stat.exists

    - name: Create Systemd Service for Apache
      copy:
        dest: /etc/systemd/system/apache2.service
        content: |
          [Unit]
          Description=Apache HTTPD
          After=network.target

          [Service]
          ExecStart={{ apache_prefix }}/bin/httpd -DFOREGROUND
          ExecReload={{ apache_prefix }}/bin/apachectl graceful
          ExecStop={{ apache_prefix }}/bin/apachectl stop
          Restart=always
          User=root
          Group=root

          [Install]
          WantedBy=multi-user.target
      register: apache_service_created

    - name: Reload Systemd Daemon if Service Changed
      systemd:
        daemon_reload: yes
      when: apache_service_created.changed

    - name: Enable and Start Apache HTTPD
      systemd:
        name: apache2
        state: started
        enabled: yes

    - name: Open Firewall Ports for Apache (80 and 443)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 80
        - 443

    - name: Verify Apache Version
      command:
        cmd: "{{ apache_prefix }}/bin/httpd -v"
      register: apache_version_output
      changed_when: false

    - name: Print Apache Version
      debug:
        msg: "{{ apache_version_output.stdout }}"
